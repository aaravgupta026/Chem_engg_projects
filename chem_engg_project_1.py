# -*- coding: utf-8 -*-
"""Chem_engg_project_1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1KA0eVXp-QempNE5-JcicTT_tXRHbCwR4
"""

# Interactive Hot Pipe Cooling Simulator
# Author: Aarav Gupta

import numpy as np
import matplotlib.pyplot as plt
from ipywidgets import interact, FloatSlider, IntSlider

def pipe_cooling(T_initial=100, T_ambient=25, mass=2.0, Cp=500, k=50, A_surface=0.1, h=25, dx=0.01, total_time=5):
    dt = 1
    time = np.arange(0, total_time+dt, dt)
    T_pipe = np.zeros_like(time)
    T_pipe[0] = T_initial

    for i in range(1, len(time)):
        q_cond = k * A_surface * (T_pipe[i-1] - T_ambient) / dx
        q_conv = h * A_surface * (T_pipe[i-1] - T_ambient)
        q_total = q_cond + q_conv
        dT = - (q_total * dt) / (mass * Cp)
        T_pipe[i] = T_pipe[i-1] + dT

    plt.figure(figsize=(8,5))
    plt.plot(time, T_pipe, color='red', linewidth=2)
    plt.title("Pipe Cooling Over Time")
    plt.xlabel("Time (seconds)")
    plt.ylabel("Pipe Temperature (°C)")
    plt.grid(True)
    plt.show()

# Create interactive sliders
interact(pipe_cooling,
         T_initial=IntSlider(min=50, max=200, step=10, value=100, description="Initial Temp (°C)"),
         T_ambient=IntSlider(min=0, max=50, step=5, value=25, description="Ambient Temp (°C)"),
         mass=FloatSlider(min=0.5, max=5, step=0.1, value=2.0, description="Mass (kg)"),
         Cp=IntSlider(min=100, max=1000, step=50, value=500, description="Specific Heat (J/kg°C)"),
         k=IntSlider(min=10, max=100, step=5, value=50, description="Thermal Cond. (W/m°C)"),
         A_surface=FloatSlider(min=0.01, max=0.5, step=0.01, value=0.1, description="Surface Area (m²)"),
         h=IntSlider(min=5, max=100, step=5, value=25, description="Conv. Coeff. (W/m²°C)"),
         dx=FloatSlider(min=0.001, max=0.05, step=0.001, value=0.01, description="Pipe Thickness (m)"),
         total_time=IntSlider(min=5, max=30, step=1, value=5, description="Time (s)")
        )